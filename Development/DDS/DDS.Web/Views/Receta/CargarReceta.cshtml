@model DDS.Models.ViewModels.RecetaViewModel
@{
    ViewBag.Title = "Crear Receta";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<h2>@ViewBag.Title</h2>
<div class="row">
    <div class="col-md-8">
        <section id="ResgistroForm">
            @using (Html.BeginForm("CargarReceta", "Receta", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Debe completar los campos obligatorios.</h4>
                <hr />
                @Html.ValidationSummary("", new { @class = "text-danger" })
                if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert-success">
                        <p><strong>Success:</strong> @TempData["SuccessMessage"].ToString()</p>
                    </div>
                }
                <div class="form-group">
                    @Html.LabelFor(m => m.Nombre, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Dificultad, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(m => m.Dificultad, "--- Seleccione ---", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Temporada, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(m => m.Temporada, "--- Seleccione ---", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Calorias, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Calorias, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Categorias", new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(x => x.Desayuno)
                        @Html.LabelFor(x => x.Desayuno)
                        @Html.CheckBoxFor(x => x.Almuerzo)
                        @Html.LabelFor(x => x.Almuerzo)
                        @Html.CheckBoxFor(x => x.Merienda)
                        @Html.LabelFor(x => x.Merienda)
                        @Html.CheckBoxFor(x => x.Cena)
                        @Html.LabelFor(x => x.Cena)
                    </div>
                </div>
                <div class="form-group">
                    <h3>Ingredientes</h3>
                    <table id="tblIngredientes" class="table dataTable table-bordered table-hover table-striped">
                        <thead>
                            <tr>
                                <th>Nombre</th>
                                <th>Cantidad de Porciones</th>
                                <th>Calorias x porción</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.Ingredientes.Any())
                            {
                                foreach (var ing in Model.Ingredientes)
                                {
                                    <tr>
                                        <td>@ing.Nombre</td>
                                        <td>@ing.Porcion</td>
                                        <td>@ing.CaloriasPorcion</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                    <button id="btnAgregarIngredientes" type="button" class="btn btn-default">Agregar Ingredientes</button>
                </div>
                <div class="form-group">
                    <h3>Condimentos</h3>
                    <table id="tblCondimentos" class="table dataTable table-bordered table-hover table-striped">
                        <thead>
                            <tr>
                                <th>Nombre</th>
                                <th>Tipo</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.Condimentos.Any())
                            {
                                foreach (var con in Model.Condimentos)
                                {
                                    <tr>
                                        <td>@con.Nombre</td>
                                        <td>@con.Tipo</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                    <button id="btnAgregarCondimentos" type="button" class="btn btn-default">Agregar Condimentos</button>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Guardar" class="btn btn-primary" />
                        <input type="button" value="Volver" class="btn btn-default" onclick="window.location.href='@Url.Action("CargarReceta")'" />
                    </div>
                </div>
            }
        </section>
    </div>
</div>

<script>
    $(document).ready(function () {
        var data = {
            "emptyTable": "No ha agregado items a la tabla",
            "info": "Mostrando _START_ a _END_ de _TOTAL_ entradas",
            "infoEmpty": "Mostrando 0 a 0 de 0 entradas",
            "infoFiltered": "(filtrado de _MAX_ total entradas)",
            "infoPostFix": "",
            "thousands": ",",
            "lengthMenu": "Mostrar _MENU_ entradas",
            "loadingRecords": "Cargando...",
            "processing": "Procesando...",
            "search": "Buscar:",
            "zeroRecords": "No se encontraron registros",
            "paginate": {
                "first": "Primer",
                "last": "Ultima",
                "next": "Siguiente",
                "previous": "Previa"
            }
        };

        $("#tblIngredientes #tblCondimentos").dataTable({
            "language": data,
            "bFilter": false,
            "bInfo": false,
            "bPaginate": false,
        });
    });
</script>